

client(react)에서 받은 토큰을 저장할 위치

1. 변수에 저장
 - 코드가 직관적, 상대적으로 보안이 좋다.
 - 새로고침하면 로그인 정보가 사라짐 -> 이 문제를 해결하도록 코드수정

2. 웹 스토리지에 저장(자바(백서버) - 디비, React(javascript) - 데이터 어디서 저장하나??? > 웹스토리지??
   2-1 sessionStorage
     - 브라우저가 꺼지면 데이터 소멸
     - 브라우저가 탭끼리 데이터 공유 안 됨!!!!
     - xss( Cross Site Scriping) 공격에 취약
   2-2 localStorage
     - 브라우저가 꺼져도 데이터 소멸되지않음!
     - pc가 꺼져도 소멸되지않음! 
     - 영구 보존 ( 필요한 데이터를 지울수없는 단점이 있음, 지우려면 직접적인 코드로 삭제명령을 해야함! 시간이 지나도 자동소멸 절대 안 됨)	
     - 브라우저의 탭끼리 데이터 공유 잘 됨!
     - xss( Cross Site Scripting) 공격에 취약

3. cookie에 저장
- 클라이언트 pc에 데이터 저장
- pc를 꺼도 사라지지 않음. 탭끼리 데이터 공유
- 새로고침 시 사라지지 않음
- 쿠키만료 기간을 지정하지 않으면 브라우저 종료 시 데이터 삭제
- 자바스크립트 코드로 쿠키의 데이터를 삭제
- 단점 : 한번 들어온 공격(csrf)에 취약함!


Local Storage vs Cookie
1. 데이터 저장 공간 Local Storage >>>> Cookie (~몇일동안 안보이게하기 이게 쿠키기능?)
2. 쿠키는 데이터의 저장시간 설정가능, 로컬스토리지는 시간 설정 불가능
3. 쿠키에 저장된 데이터는 서버로 요청시 무조건 전달 됨(데이터 전달에 대한 컨트롤 불가)
반대로 로컬스토리지에 저장된 데이터는 개발자가 필요 시에만 요청에 추가 할수있음! 


session과 cookie의 차이점(웹 개발에서 백서버를 의미)
- 백서버의 session과 프론트의 sessionStorage는 다른거임! 
- 여기서 말하는 쿠키는 프론트의 cookie와 같은거임! 
- 웹스토리지와 차이점 : 웹 스토리지는 프론트 전용 저장공간
		 -> 웹 스토리지를 컨르롤 하는 코드가 자바에 없음
- session : 서버에 위치한 저장공간
- cookie : 클라이언트에 위차한 저장공간 





sessionStorage.setItem()
